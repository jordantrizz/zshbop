# --
# malware commands
#
# Example help: help_malware[wp]='Generate phpinfo() file'
#
# --
_debug " -- Loading ${(%):-%N}"

# - Init help array
typeset -gA help_malware

# What help file is this?
help_files[malware]='Malware scanning'

# -- findbot.pl
help_malware[findbot.pl]='Perl script to find suspicious scripts. This script is taken from http://cbl.abuseat.org/findbot.pl'

# -- yara-compile
help_malware[yara-compile]='Compile yara from souce'
yara-compile () {
    YARA_COMPILE_TMP="$HOME/tmp"
    _debug_all
    _cexists yara
    if [[ $? == "0" ]]; then
        _error "-- Yara installed, remove it first"
    else
        _success "-- Yara not installed, trying to compile"
        curl -L https://github.com/VirusTotal/yara/archive/refs/tags/v4.2.1.zip --output $YARA_COMPILE_TMP/v4.2.1.zip
        unzip -o $YARA_COMPILE_TMP/v4.2.1.zip -d $YARA_COMPILE_TMP
        $YARA_COMPILE_TMP/yara-4.2.1/build.sh
        export PATH=$PATH:$YARA_COMPILE_TMP/yara-4.2.1
    fi
}

# -- yara-install
help_malware[yara-install]='Install yara via apt'
yara-install () {
    _debug_all

	_cexists yara
    if [[ $? == "0" ]]; then
        _success "-- Yara installed"
    else
        echo "-- Yara not installed, trying to install via apt"
        sudo apt-get install yara
    fi
}

# -- yara-signatures
help_malware[yara-signatures]='Grab signatures from Loki at https://github.com/Neo23x0/signature-base'
yara-signatures () {

    echo "-- Preparing Signatures from https://github.com/Neo23x0/signature-base using v2.0"
    YARA_SIG_TMP="$HOME/tmp"
    YARA_SIG_DIR="$YARA_SIG_TMP/signature-base-2.0/yara"
    mkdir $YARA_SIG_TMP
    curl -L "https://github.com/Neo23x0/signature-base/archive/refs/tags/v2.0.zip" --output $YARA_SIG_TMP/signature-base-2.0.zip
    unzip -o $YARA_SIG_TMP/signature-base-2.0.zip -d $YARA_SIG_TMP

    rm $YARA_SIG_DIR/generic_anomalies.yar
    rm $YARA_SIG_DIR/general_cloaking.yar
    rm $YARA_SIG_DIR/thor_inverse_matches.yar
    rm $YARA_SIG_DIR/yara_mixed_ext_vars.yar
    rm $YARA_SIG_DIR/apt_cobaltstrike.yar

    cat $YARA_SIG_DIR/*.yar > $YARA_SIG_DIR/all_rules.temp
    yarac $YARA_SIG_DIR/all_rules.temp $YARA_SIG_DIR/all_rules_compiled.yarc

    _success "-- Compelted"
    echo "  -- Run yara -r -C $YARA_SIG_DIR/all_rules_compiled.yarc <PATH>"
}


